<?php

declare(strict_types=1);

namespace Api\UI\Console\Customer\Create;

use Api\Domain\Events\Bus\PublisherMessageInterface;
use Api\Infrastructure\Console\CliCommand;
use Api\Infrastructure\RabbitMQ\MessageMQ;
use Ramsey\Uuid\Uuid;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

final class PublishCreateCustomerCommand extends CliCommand
{
    private PublisherMessageInterface $publisherMessage;


    public function __construct(
        PublisherMessageInterface $publisherMessage
    ) {
        $this->publisherMessage = $publisherMessage;

        parent::__construct();
    }


    protected function configure()
    {
        $this
            ->setName('rabbit:publish:create-customer')
            ->setDescription('Publish "create-customer" RabbitMQ queue')
            ->addArgument('firstname', InputArgument::REQUIRED, 'Customer firstname')
            ->addArgument('lastname', InputArgument::REQUIRED, 'Customer lastname');

        parent::configure(); // TODO: Change the autogenerated stub
    }


    protected function execute(InputInterface $input, OutputInterface $output): bool
    {
        $this->publisherMessage->publish(
            new MessageMQ(
                [
                    'uuid'      => Uuid::uuid4(),
                    'firstname' => $input->getArgument('firstname'),
                    'lastname'  => $input->getArgument('lastname'),
                ]
            )
        );

        return true;
    }
}
